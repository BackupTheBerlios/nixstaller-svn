OVERALL
- Use ldd to detect right frontend in startinstaller.sh?
- Make shared 'library' for scripts
- Detect ssh'd terminals with X tunnel
- Qt/KDE and GTK2 frontends
- Fix installation if destdir has no read access?
- Use locale fix from latest kdesu?
- Dep handling?
- Use deltas <--> patches for different frontends?
- Remove double GetTranslation calls
- Better util.a configure testing?
- Replace vec [] access with at() ?
- Build script that compiles all Nixstaller dependencies?
- Modify Makeself?
- x64 bins?
- Check assert's: Shouldn't have function calls as arguments
- Update Lua library for FBSD, NBSD, OBSD, SunOS
- Recursive directory creation in VerifyDestDir (patch from Edward), also check root creation
- Lua Panic function
- Check boundries etc. for lua widgets

        
TRANSLATIONS
- Toggle (buttonbar)
- Navigate (buttonbar)
- ARROWS/PGUP/PGDOWN (buttonbar)
- Character (buttonbar)


MAIN
- More advanced ExtractFiles() (Work as a Lua iterator? Define which package to extract)
- Make m_bInstalling private
- Make CMain::UpdateLanguage public?
- Let Lua dir iter use class code?
- Check class metatable (readable/writeable from scripts?)
- Lighten template functions?
- Make function wrapper for m_Variables in CBaseLuaCFGMenu
- Remove GetTranslation function calls for lua widget descriptions?
- Remove CoreBack/Next functions

LIBSU
- Clean up/redesign
- sudo support


REGISTER
- Check if version is specified in config file?
- Language updates: FLTK AppManager
- Better error handling for register
- Check path for rm
- exceptions

        
NCURSES
- Check chtype?
- Better monochrome support?
- Exceptions?
- Translations and buttonbar descriptions?
- Check if UpdateTranslation functions are called - needs testing
- Check widget ordering for screens
- Add callback events to lua widgets or hook enter key in installscreen for next button focusing

GTK
- Move main window away from base frontend class?

FLTK
- Update code to new lua design
- Change Lua inputfield label width handling
- Check lua widgets; move members to private, change virtual function names etc.

DESIGN
- Reorganize var and type names? (type prefixes etc)
- Virtual functions that need to call parent function --> make additional function in base class
that will be called instead of virtual function, this function should call the virtual instead.
- Split code in more files (SConstruct aswell?)
- Use C++ style casts(static_cast)
- More usage of const?
- Move m_Options from lua checkbox/radiobutton to base class
- Move global static ints for widget spacing etc to static functions

        
