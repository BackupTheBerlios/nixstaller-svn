OVERALL
- Modify Makeself?
- Check read permissions for extract dir
- Add new strings to translation files
- Add lua headers/libs to SVN, compile as C++ lib
- Use deltas <--> patches for different frontends?
- Test/clean/check new edelta code
- Update lib-notes file for each OS/ARCH
- Delay for updating GUI in frontends while installing
- Replace vec [] access with at() ?
- Test installer scripts
- Fix/Test CPU detection in sh scripts
- Comment the '%s' in strings files.
- Add new error detection in Lua scripts for dir Iter

MAIN
- Error handling in lua class(exceptions, type checking)
- Overide some lua funcs?(ie. exit)
- Create directory with root access in VerifyDestDir()?
- Convert LuaDirIter to CDirIter? - Needs testing
- Check install steps (inits properly?)
- Check empty titles for Lua widgets (spaces well with empty titles?)
- Check new checkbox argument
- Check default(empty) dir for lua dir selector
- Check range checking of input:setspacing
- Convert all Lua functions/variables to lowercase

LIBSU
- BUG: Executing commands as root to quickly may mess things up - fixed?
- Use locale fix from latest kdesu?

NCURSES FRONTEND
- Use ncurses with termcap fallback for freebsd
        
FLTK FRONTEND
- Compile FLTK with exception support for freebsd, netbsd, sunos
                
DOCS
- Max config var description length
- Update examples and screenshots
- Check for clickable sections in TOC
- Add info for default func arguments
- Check for right vertical spacing, paragraphs etc
- Escape characters
- Dir Iter

FOR RELEASE
- CFLAGS: Add -Os -DNDEBUG; remove -g
- Disable libsu logging
- Disable debug Lua lib

----------------------------- LATER ------------------------------------

REGISTER
- Check if version is specified in config file?
- Language updates: FLTK AppManager
- Better error handling for register
- Check path for rm
- exceptions
        
NCURSES
- Automaticly size messageboxes
- Check chtype
        
DESIGN
- Reorganize var and type names? (type prefixes etc)
- Virtual functions that need to call parent function --> make additional function in base class
that will be called instead of virtual function, this function should call the virtual instead.
- Split code in more files (SConstruct aswell?)
- Use C++ style casts(static_cast)
- More usage of const?
        