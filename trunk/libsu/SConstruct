opts = Options()
opts.Add('CC', 'The C compiler', 'gcc')
opts.Add('CXX', 'The C++ compiler', 'g++')

env = Environment(options = opts, CCFLAGS = "-Wall -Os", CPPPATH='.')

Help(opts.GenerateHelpText(env))

config_header = 'config.h'

# configure stuff (only do this when not cleaning)
if not env.GetOption('clean'):
    conf = env.Configure(config_h = config_header)
    
    conf.CheckFunc('initgroups')
    
    conf.CheckCXXHeader(['stdlib.h', 'sys/types.h', 'libutil.h'], "<>")
    conf.CheckCXXHeader('util.h', "<>")
    conf.CheckCXXHeader('pty.h', "<>")
    
    if conf.CheckLib('util', 'openpty'):
        conf.env.Append(CPPDEFINES = 'HAVE_OPENPTY')
        
    conf.CheckFunc('setgroups')
    conf.CheckFunc('getgroups')
    conf.CheckFunc('grantpt')
    conf.CheckFunc('setpriority')
    conf.CheckFunc('getpt')
    conf.CheckFunc('unlockpt')
    conf.CheckFunc('ptsname')
    
    # irix pty stuff
    conf.CheckFunc('_getpty')
    
    if conf.CheckType('ucred', '#include <sys/socket.h>'):
        conf.env.Append(CPPDEFINES = 'HAVE_STRUCT_UCRED')
    
    conf.CheckFunc('getpeereid')
    
    conf.CheckLib('util')

    if not conf.CheckLibWithHeader('', 'time.h', 'C', 'nanosleep(0, 5);'):
        conf.CheckLibWithHeader('rt', 'time.h', 'C', 'nanosleep(0, 5);')
 
    env = conf.Finish()
else:
    # Atleast for me, scons won't clean properly...removing all '.sconsign' files manually seems to help
    Execute(Delete('.sconf_temp'))
    Execute(Delete('.sconsign.dblite'))

# Builds the lib
env.StaticLibrary("libsu", Split('main.cpp utils.cpp terminal.cpp'))

# Builds test program
env.Program("libtest", 'libtest.cpp', LIBPATH=".", LIBS=Split('$LIBS su'))
